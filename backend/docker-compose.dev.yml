version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: techfolks_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: techfolks_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./src/database/migrations/002_create_groups_tables.sql:/docker-entrypoint-initdb.d/02-groups.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d techfolks_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: techfolks_redis_dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: techfolks_backend_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: techfolks_db
      DB_USER: postgres
      DB_PASSWORD: postgres123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: dev_jwt_secret_key_change_in_production
      JWT_EXPIRE: 24h
      JWT_REFRESH_EXPIRE: 7d
      ENABLE_METRICS: true
      LOG_LEVEL: debug
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend (Vite Dev Server)
  frontend:
    build:
      context: ./techfolks/frontend
      dockerfile: Dockerfile.dev
    container_name: techfolks_frontend_dev
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3000/api
      VITE_WS_URL: ws://localhost:3000
    ports:
      - "5173:5173"
    volumes:
      - ./techfolks/frontend:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: techfolks_dev_network